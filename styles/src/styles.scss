@use "partials/reboot";
@use "partials/mixins";
@use "partials/variables";

.btn {
  cursor: pointer;
  font-size: 1.25rem;
  white-space: nowrap;
  @include mixins.font_rajdhani_medium;

  &-group {
    gap: 1rem 2rem;
    @include mixins.flex($direction: column);

    @include mixins.mq_md {
      @include mixins.flex($direction: row);
    }
  }

  &-translucent {
    width: 13rem;
    min-width: max-content;
    padding: 1rem 2rem;
    text-transform: uppercase;
    background: variables.$grad-red-transp;

    &:hover {
      background: variables.$grad-red-opaque;
    }
  }

  &-bordered {
    position: relative;
    border: 1px solid;
    padding: 0.5rem 1rem;
    border-image: variables.$grad-blue-transp 1;

    &:hover {
      background: variables.$grad-blue-transp;
    }
  }
}

.fade-in-hidden {
  // hide the element to be animated before the animation actually occurs
  opacity: 0;
}

.fade-in-shown {
  @include mixins.animation-fade-in();
}

.container {
  position: relative;
  z-index: 10;
  margin: 0 auto;
  padding: 0 2rem;
  max-width: calc(100vw - 4rem);
  @include mixins.border(left);
  @include mixins.border(right);

  @include mixins.mq_md {
    padding: 0 3rem;
    max-width: calc(100vw - 6rem);
  }
  @include mixins.mq_lg {
    padding: 0 4rem;
    max-width: calc(100vw - 10rem);
  }
  @include mixins.mq_xl {
    padding: 0 4.5rem;
    max-width: calc(100vw - 14rem);
  }
}

.logo {
  height: 2.5rem;
  display: inline-block;

  @include mixins.mq_md {
    height: 3rem;
  }
  @include mixins.mq_lg {
    height: 3.5rem;
  }

  img {
    height: 100%;
  }
}

header {
  position: relative;
  background: url("/assets/illustrations/Bathome1.png") no-repeat top center;
  background-size: cover;

  &::after {
    content: "";
    background: variables.$grad-black;
    z-index: 1;
    @include mixins.p_absolute($y_axis: bottom, $height: 4rem);
  }

  .nav {
    &.container {
      @include mixins.border($position: bottom, $width: 0.25rem);
    }

    &-wrapper {
      @include mixins.flex($justify-content: space-between);
      @include mixins.padding_y(2.5rem, 3rem);

      @include mixins.mq_md {
        @include mixins.padding_y(3rem, 3.5rem);
      }
      @include mixins.mq_lg {
        @include mixins.padding_y(4rem, 4.5rem);
      }
    }
  }

  .links {
    @include mixins.flex($justify-content: space-between);
    font-size: 2rem;
    gap: 3rem;
  }

  .link {
    position: relative;
    text-transform: uppercase;

    &:hover::after,
    &-active::after {
      content: "";
      text-decoration: underline;
      @include mixins.border(bottom, variables.$white, 2px);
      @include mixins.p_absolute($y_value: 102%);
    }
  }

  .banner {
    &-wrapper {
      margin: 0 auto;
      max-width: 75%;
      text-align: center;
      @include mixins.padding_y(4rem, 4rem);

      @include mixins.mq_md {
        @include mixins.padding_y(6rem, 8rem);
      }
      @include mixins.mq_lg {
        max-width: 60%;
        @include mixins.padding_y(10rem, 14rem);
      }
    }

    &-description {
      margin-bottom: 1rem;
    }

    &-title {
      font-size: 2.25rem;
      margin-bottom: 1.3rem;
      @include mixins.font_rajdhani_medium;
    }
  }
}

.popup {
  @include mixins.p_fixed($y_value: 50%);
  z-index: 100;
  display: none;

  &-shown {
    display: block;
  }

  &-content {
    position: relative;
  }

  // the background of the popup is obtained by superposing "$black-1" and "$grad-blue-transp-2", so we use
  // - ".popup-content::after" to get the "$black-1" layer
  // - ".popup-body" to get the "$grad-blue-transp-2" layer
  &-content::after,
  &-body {
    @include mixins.flex($direction: column);
    @include mixins.p_absolute(
      $x_value: 50%,
      $y_value: 50%,
      $width: 60%,
      $height: 250px
    );
    max-width: 300px;
    transform: translate(-50%, -50%);
    border-radius: 1rem;
  }

  &-content::after {
    content: "";
    z-index: -1;
    background: variables.$black-1;
  }

  &-body {
    background: variables.$grad-blue-transp-2;
    text-transform: uppercase;
    box-shadow: 0 0 2rem 0 variables.$black-3;
  }
}

aside {
  @include mixins.p_fixed($y_value: 50%);
  z-index: 99;

  .container {
    position: relative;
  }

  .networks {
    @include mixins.flex($direction: column);
    @include mixins.p_absolute($x_axis: right, $x_value: 0, $width: auto);
    transform: translate(50%, -50%);
    gap: 1.5rem;
  }

  .icon-aside {
    max-width: 2.8rem;

    @include mixins.mq_md {
      max-width: 3.5rem;
    }
    @include mixins.mq_lg {
      max-width: 5rem;
    }

    img {
      width: 100%;
    }
  }
}

.section {
  @include mixins.mq_md {
    &-left {
      .section-title,
      .section-text {
        padding-right: 4rem;
      }
    }

    &-right {
      .section-title,
      .section-text {
        padding-left: 4rem;
      }
    }
  }

  &.arrow-down {
    .container {
      padding-bottom: 4rem;
    }

    img {
      cursor: pointer;
      height: 2.2rem;
      margin: 0 auto;
      display: block;
    }
  }

  &-title {
    font-size: 1.75rem;
    text-align: center;
    text-transform: uppercase;
    @include mixins.padding_y(2rem, 2rem);
    @include mixins.font_spaceGrotesk_bold;

    @include mixins.mq_md {
      text-align: start;
    }
  }

  &-ally {
    position: relative;

    > img {
      @include mixins.p_absolute($x_axis: right, $width: auto, $height: 11rem);
      transform: translateY(-50%);
      z-index: 11;

      @include mixins.mq_md {
        height: 15rem;
        transform: translateY(-65%);
      }
      @include mixins.mq_lg {
        height: 18rem;
        transform: translateY(-80%);
      }
    }
  }

  &-title #nemesis {
    width: max-content;
    position: relative;
  }

  &-title #nemesis img {
    @include mixins.p_absolute(
      $x_value: 100%,
      $y_axis: bottom,
      $width: auto,
      $height: 5.5rem
    );
    transform: translateX(-40%);
  }

  &-text {
    padding-bottom: 4.5rem;
    text-align: justify;
  }

  &-images {
    @include mixins.flex();
    gap: 4rem;
    flex-wrap: wrap;
    text-align: center;
    padding-bottom: 4rem;
  }

  &-image {
    display: block;
    max-width: 100%;
    margin-bottom: 1.5rem;
  }

  &-image-wrapper:hover {
    // the element with this class is being animated in which we also manipulate "transform" property
    // so we need to make sure the value here takes precedence over that one from the animation
    transform: scale(1.1) !important;
    transition: all ease 5s;
  }

  &-image-full {
    display: block;
    max-width: 100%;
  }

  &-form {
    background: variables.$grad-blue-transp;

    .section-title {
      text-align: center;
    }

    .forms {
      max-width: variables.$lg;
      margin: 0 auto;
      padding: 2rem 4rem;

      @include mixins.mq_md {
        padding: 2rem 6rem;
      }
    }

    label,
    input,
    textarea,
    .select-option-visible {
      margin-bottom: 1.8rem;
    }

    .form-heading {
      display: block;
      text-transform: uppercase;
    }

    .form-heading ~ *,
    .form-heading ~ ::placeholder {
      @include mixins.text-light;
    }

    .input-block,
    .input-block::placeholder {
      width: 100%;
      display: block;
      background-color: transparent;
    }

    .input-block {
      @include mixins.border($color: variables.$gray-1, $width: 1px);
    }

    .checkbox-wrapper {
      @include mixins.mq_md {
        max-width: 90%;
      }
    }

    .radio-group {
      @include mixins.flex();
      @include mixins.text-white;
      gap: 1rem;

      input[type="radio"] {
        display: none;
      }

      input[type="radio"]:checked + .btn-bordered {
        background: variables.$grad-blue-transp;
      }
    }

    #message {
      min-height: 1.5rem;
      min-width: 100%;
      max-width: 100%;
    }
  }
}

.carousel {
  gap: 1.5rem;
  color: variables.$gray-1;
  font-size: 0.75rem;
  margin-bottom: 5rem;
  @include mixins.font_spaceGrotesk_normal;
  @include mixins.flex($justify-content: space-between);

  @include mixins.mq_sm {
    font-size: 0.875rem;
  }

  &-control {
    width: 1rem;
    cursor: pointer;

    @include mixins.mq_sm {
      width: 1.5rem;
    }
    @include mixins.mq_md {
      width: 2rem;
    }
  }

  &-content {
    display: grid;
    grid-template-columns: 1fr 2fr;
    max-width: 500px;
    align-items: center;

    @include mixins.mq_sm {
      grid-template-columns: 1fr 3fr;
    }

    &-text {
      gap: 0.5rem;
      padding: 0.5rem;
      min-height: 100%;
      background: variables.$grad-blue-transp;
      @include mixins.flex($direction: column, $align-items: start);

      @include mixins.mq_sm {
        padding: 1rem;
      }

      h5 {
        letter-spacing: 1px;
      }
    }

    &-text--detail {
      display: none;

      @include mixins.mq_md {
        display: block;
      }
    }

    &-image {
      width: 100%;
      height: 100%;
    }

    .imdb {
      color: variables.$yellow-2;
    }
  }
}

.video-wrapper {
  padding-bottom: 6rem;

  #img-ba {
    width: 100%;
  }

  #link-ba {
    position: relative;
    display: block;
  }

  #link-ba:hover {
    box-shadow: 0 0 2rem 0 variables.$white-2;
  }

  #link-ba:hover #icon-player {
    display: block;
  }

  #icon-player {
    @include mixins.p_absolute(
      $x_value: 50%,
      $y_value: 50%,
      $width: auto,
      $height: auto
    );
    transform: translate(-50%, -50%);
    display: none;
  }
}

.quotes {
  @include mixins.flex(
    $justify-content: space-evenly,
    $align-items: flex-start
  );
  text-align: center;
  padding: 8rem 0;

  &-image {
    width: 4rem;
  }

  #quotes-image-second {
    align-self: flex-end;
  }

  &-content {
    padding: 4rem 2rem;
    max-width: 500px;
  }

  &-text {
    margin-bottom: 1rem;
  }

  &-author {
    @include mixins.text-light;
    margin-bottom: 0.5rem;
  }

  &-navigation-btn {
    margin: 0 1px;
    display: inline-block;
    width: 5px;
    height: 5px;
    border: 1px solid variables.$blue;
    border-radius: 50%;

    &-active {
      background-color: variables.$blue;
    }
  }
}

footer {
  .container {
    padding-bottom: 8rem;
  }

  .flex {
    @include mixins.flex();
    gap: 0.5rem;
  }

  .networks {
    gap: 2rem;
    margin-top: 2rem;
  }
}

.icon {
  &-small {
    height: 1.3rem;

    img {
      height: 100%;
    }
  }

  &-medium {
    height: 2.8rem;
  }

  &-large {
    width: 2.8rem;

    @include mixins.mq_md {
      width: 3.5rem;
    }
    @include mixins.mq_lg {
      width: 5rem;
    }
    img {
      width: 100%;
    }
  }
}

#select {
  position: relative;

  &.select-shown {
    .select-options {
      display: block;
    }

    .select-option-visible-icon {
      transform: rotate(180deg);
    }
  }

  .select-options {
    @include mixins.p_absolute($x_value: 0, $y_value: 100%);
    z-index: 1;
    display: none;
    background: variables.$black-1;
    box-shadow: 0 0 2rem 0 variables.$black-3;
  }

  .select-option-visible {
    display: grid;
    grid-template: 1fr / 1fr 2rem;
    cursor: pointer;

    &-text {
      white-space: nowrap;
      overflow: hidden;
    }

    &-icon {
      height: 1rem;
      justify-self: end;
      align-self: center;
    }
  }

  .select-option {
    background: variables.$grad-blue-transp-2;
    padding: 0.5rem;
    min-width: 100%;
    max-width: 100%;
    overflow: hidden;
    white-space: nowrap;
    cursor: pointer;
    @include mixins.border(bottom);

    &:hover {
      background: variables.$grad-blue-transp;
    }
  }
}

.icon-link {
  position: relative;

  &:hover img {
    filter: brightness(0) saturate(100%) invert(88%) sepia(74%) saturate(5057%)
      hue-rotate(359deg) brightness(104%) contrast(106%);
  }
}
